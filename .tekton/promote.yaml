apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: promote
spec:
  description: Task to promote between environments.
  params:
    - name: gitops-repo-url
      type: string
      description: URL of gitops repository to update with the newly built image.
    - name: environment
      type: string
      description:  stage - promote from dev, and prod, promote from stage.
    - name: gitops-auth-secret-name
      type: string
      default: gitops-auth-secret
      description: |
        Secret of basic-auth type containing credentials to commit into gitops repository.
  volumes:
    - name: gitops-auth-secret
      secret:
        secretName: $(params.gitops-auth-secret-name)
        optional: true
  steps:
  - name: promotion-step
    image: quay.io/redhat-appstudio/task-toolset@sha256:931a9f7886586391ccb38d33fd15a47eb03568f9b19512b0a57a56384fa52a3c
    volumeMounts:
      - name: gitops-auth-secret
        mountPath: /gitops-auth-secret
    env:
      - name: PARAM_GITOPS_REPO_URL
        value: $(params.gitops-repo-url)
      - name: PARAM_ENV
        value: $(params.environment)
    script: |
      if test -f /gitops-auth-secret/password ; then
        gitops_repo_url=${PARAM_GITOPS_REPO_URL}
        remote_without_protocol=${gitops_repo_url#'https://'}

        password=$(cat /gitops-auth-secret/password)
        if test -f /gitops-auth-secret/username ; then
          username=$(cat /gitops-auth-secret/username)
          echo "https://${username}:${password})@${hostname}" > "${HOME}/.git-credentials"
          origin_with_auth=https://${username}:${password}@${remote_without_protocol}.git
        else
          origin_with_auth=https://${password}@${remote_without_protocol}.git
        fi
      else
        echo "git credentials to push into gitops repository ${PARAM_GITOPS_REPO_URL} is not configured."
        echo "gitops repository is not updated automatically."
        echo "You can update gitops repository with the new image: ${PARAM_IMAGE} manually"
        echo "TODO: configure git credentials to update gitops repository."
        exit 0
      fi
 
      echo "------------------------------------"
      echo $PARAM_GITOPS_REPO_URL
      echo $PARAM_ENV

      ls -al
      ls -al /workspace
      
      du -a /workspace

      echo "------------------------------------"
      cd /workspace/output 
      yq .metadata.name application.yaml
      echo "------------------------------------"


      # https://github.com/user-org/test-component-gitops => test-component
      gitops_repo_name=$(basename ${PARAM_GITOPS_REPO_URL})


      # component_id=${gitops_repo_name%'-gitops'}
      # deployment_patch_filepath="components/${component_id}/overlays/development/deployment-patch.yaml"

      # git config --global user.email "rhtap@noreplay.com"
      # git config --global user.name "gitops-update"

      # git clone ${PARAM_GITOPS_REPO_URL}
      # cd ${gitops_repo_name}

      # sed -i "s| image: .*| image: ${PARAM_IMAGE}|" $deployment_patch_filepath

      # git add .
      # git commit -m "Update '${component_id}' component image to: ${PARAM_IMAGE}"
      # git remote set-url origin $origin_with_auth
      # git push
  workspaces:
  - description: The git repo will be cloned onto the volume backing this Workspace.
    name: output