apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: handle-promote-action
spec:
  description: Task to promote between environments.
  params:
    - name: gitops-repo-url
      type: string
      description: URL of gitops repository to update with the newly built image.
    - name: commit-message
      type: string
      description: Pass "/promote development" or "/promote stage"
    - name: gitops-auth-secret-name
      type: string
      default: gitops-auth-secret
      description: |
        Secret of basic-auth type containing credentials to commit into gitops repository.
  workspaces:
  - description: The git repo will be cloned onto the volume backing this Workspace.
    name: output
  volumes:
    - name: gitops-auth-secret
      secret:
        secretName: $(params.gitops-auth-secret-name)
        optional: true
  steps:
  - name: promotion-step
    image: quay.io/redhat-appstudio/task-toolset@sha256:931a9f7886586391ccb38d33fd15a47eb03568f9b19512b0a57a56384fa52a3c
    volumeMounts:
      - name: gitops-auth-secret
        mountPath: /gitops-auth-secret
    env:
      - name: PARAM_GITOPS_REPO_URL
        value: $(params.gitops-repo-url) 
      - name: COMMIT_MESSAGE
        value: $(params.commit-message)  
    script: |
      if test -f /gitops-auth-secret/password ; then
        gitops_repo_url=${PARAM_GITOPS_REPO_URL}
        remote_without_protocol=${gitops_repo_url#'https://'}

        password=$(cat /gitops-auth-secret/password)
        if test -f /gitops-auth-secret/username ; then
          username=$(cat /gitops-auth-secret/username)
          echo "https://${username}:${password})@${hostname}" > "${HOME}/.git-credentials"
          origin_with_auth=https://${username}:${password}@${remote_without_protocol}.git
        else
          origin_with_auth=https://${password}@${remote_without_protocol}.git
        fi
      else
        echo "git credentials to push into gitops repository ${PARAM_GITOPS_REPO_URL} is not configured."
        echo "gitops repository is not updated automatically."
        echo "You can update gitops repository with the new image: ${PARAM_IMAGE} manually"
        echo "TODO: configure git credentials to update gitops repository."
        exit 0
      fi 
      echo "Commit Message:"
      echo "$COMMIT_MESSAGE"
      echo 
      echo "Commit Message:"
      echo "$COMMIT_MESSAGE" | od -x
      echo 
      command=$(echo $COMMIT_MESSAGE | head -n1)
      echo "Command:"
      echo "$command"
      echo 
      COMPONENT_NAME=$(grep name: /workspace/output/source/application.yaml | cut -d ':' -f2 | tr -d '[:space:]') 
      echo "COMPONENT_NAME:"
      echo "$COMPONENT_NAME"
      echo 
      cd /workspace/output/source  
      ACTION=$command 
      COMPONENT_NAME=$(grep name: /workspace/output/source/application.yaml | cut -d ':' -f2 | tr -d '[:space:]') 
      echo "Repo = $PARAM_GITOPS_REPO_URL"
      echo "COMPONENT_NAME=$COMPONENT_NAME"  
      echo "ACTION=$ACTION" 
      case $ACTION in 
        "/promote development")
          SRC_OVERLAY=development
          DST_OVERLAY=stage
          ;;
        "/promote dev")
          SRC_OVERLAY=development
          DST_OVERLAY=stage
          ;; 
        "/promote prod")
          SRC_OVERLAY=development
          DST_OVERLAY=stage
          ;;  
        *)
          echo "No action in commit message for promotion."
          echo "Valid options are /promote dev | development, /promote prod."
          exit 0
          ;;
      esac 

      SRC_PATCH="components/${COMPONENT_NAME}/overlays/$SRC_OVERLAY/deployment-patch.yaml"
      DST_PATCH="components/${COMPONENT_NAME}/overlays/$DST_OVERLAY/deployment-patch.yaml"
      
      git config --global user.email "rhtap@noreplay.com"
      git config --global user.name "promotion-automation-handler"  
      #clean repo 
      cd /workspace/output
      gitops_repo_name=$(basename $PARAM_GITOPS_REPO_URL)
      rm -rf ${gitops_repo_name}  
      git clone ${PARAM_GITOPS_REPO_URL}
      cd ${gitops_repo_name}  
      echo "Promoted ${SRC_OVERLAY} to: ${DST_OVERLAY}"
      cp $SRC_PATCH $DST_PATCH  
      rm -rf promotion-action
      git diff -U0
      git status    
      git add .
      git commit -m "Promoted ${SRC_OVERLAY} to: ${DST_OVERLAY}"
      git remote set-url origin $origin_with_auth
      git push 